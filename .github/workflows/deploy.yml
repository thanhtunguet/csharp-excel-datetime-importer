name: Deploy Application

on:
  workflow_run:
    workflows: ["Build and Push Backend Docker Image", "Build and Push Frontend Docker Image"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io

jobs:
  create-compose:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create docker-compose.yml
      run: |
        cat > docker-compose.yml << EOF
        version: '3.8'

        services:
          backend:
            image: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/excel-date-importer-backend:latest
            ports:
              - "5000:80"
            environment:
              - ASPNETCORE_ENVIRONMENT=Production
              - ASPNETCORE_URLS=http://+:80
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:80/health"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 40s

          frontend:
            image: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/excel-date-importer-frontend:latest
            ports:
              - "3000:80"
            depends_on:
              - backend
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:80/health"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 40s

        networks:
          default:
            driver: bridge
        EOF

    - name: Upload docker-compose.yml
      uses: actions/upload-artifact@v3
      with:
        name: docker-compose
        path: docker-compose.yml

    - name: Create deployment instructions
      run: |
        cat > DEPLOYMENT.md << EOF
        # Deployment Instructions

        ## Prerequisites
        - Docker and Docker Compose installed
        - Ports 3000 and 5000 available

        ## Quick Start
        \`\`\`bash
        # Download and run the application
        docker-compose up -d

        # Check status
        docker-compose ps

        # View logs
        docker-compose logs -f

        # Stop the application
        docker-compose down
        \`\`\`

        ## Access URLs
        - Frontend: http://localhost:3000
        - Backend API: http://localhost:5000
        - Backend Health: http://localhost:5000/health
        - Backend Swagger: http://localhost:5000/swagger

        ## Architecture Support
        Both images support:
        - linux/amd64 (Intel/AMD processors)
        - linux/arm64 (ARM processors, Apple Silicon)

        ## Troubleshooting
        - Check container logs: \`docker-compose logs [service-name]\`
        - Restart services: \`docker-compose restart\`
        - Pull latest images: \`docker-compose pull\`
        EOF

    - name: Upload deployment instructions
      uses: actions/upload-artifact@v3
      with:
        name: deployment-instructions
        path: DEPLOYMENT.md